
[build]
  command = "bash scripts/build-for-netlify.sh"
  publish = "dist"
  functions = "netlify/functions"

[build.environment]
  NODE_VERSION = "20.19.4"
  NPM_FLAGS = "--prefer-offline --no-audit --force"
  VITE_BUILD_OPTIMIZE = "true"

  

# Production context
[context.production]
  command = "bash scripts/build-for-netlify.sh"
  environment = { NODE_ENV = "production" }

# Deploy preview context  
[context.deploy-preview]
  command = "bash scripts/build-for-netlify.sh"
  environment = { NODE_ENV = "preview" }

# Branch deploy context
[context.branch-deploy]
  command = "bash scripts/build-for-netlify.sh"
  environment = { NODE_ENV = "preview" }

# Function optimization
[functions]
  node_bundler = "esbuild"
  external_node_modules = ["node-fetch"]

[functions."unified-generate-background"]
  timeout = 720
  memory = 1536


  # Keep native / build-time-only deps out of the bundle:
  external_node_modules = [
    "@tensorflow/tfjs-node",
    "@mapbox/node-pre-gyp", 
    "mock-aws-s3",
    "aws-sdk",
    "nock"
  ]

# Function-specific configurations
[functions."aimlApi"]
  timeout = 26   # Netlify max for normal functions
  memory = 1024

# Function dependencies are handled by top-level package.json

# Cache optimization
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Expires = "Thu, 31 Dec 2099 23:59:59 GMT"

[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Expires = "Thu, 31 Dec 2099 23:59:59 GMT"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Expires = "Thu, 31 Dec 2099 23:59:59 GMT"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Expires = "Thu, 31 Dec 2099 23:59:59 GMT"

[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Expires = "Thu, 31 Dec 2099 23:59:59 GMT"

[[headers]]
  for = "/*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Expires = "Thu, 31 Dec 2099 23:59:59 GMT"

[[headers]]
  for = "/*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Expires = "Thu, 31 Dec 2099 23:59:59 GMT"

[[headers]]
  for = "/*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Expires = "Thu, 31 Dec 2099 23:59:59 GMT"

# Sitemap headers for proper Google indexing
[[headers]]
  for = "/sitemap.xml"
  [headers.values]
    Content-Type = "application/xml; charset=utf-8"
    Cache-Control = "public, max-age=3600"

[[headers]]
  for = "/robots.txt"
  [headers.values]
    Content-Type = "text/plain; charset=utf-8"
    Cache-Control = "public, max-age=3600"

# Content Security Policy for production
[[headers]]
  for = "/*"
  [headers.values]
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com; img-src 'self' data: https: blob:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https: https://www.google-analytics.com https://analytics.google.com https://api.fal.ai https://api.replicate.com https://api.cloudinary.com; frame-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;"
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
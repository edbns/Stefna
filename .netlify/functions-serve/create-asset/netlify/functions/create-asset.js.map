{
  "version": 3,
  "sources": ["../../../../../../Users/sennie/Desktop/Stefna-main/netlify/functions/create-asset.ts", "../../../../../../Users/sennie/Desktop/Stefna-main/netlify/lib/supabaseAdmin.ts"],
  "sourceRoot": "/var/folders/3j/nmp5dkpd4tv8j0yq8f2ln8780000gn/T/tmp-42344-rAihsraPt6xg",
  "sourcesContent": ["import { Handler } from '@netlify/functions';\nimport { supabaseAdmin } from '../lib/supabaseAdmin';\nimport type { CreateAssetInput, ApiResult, Asset } from '../../src/lib/types';\n\nfunction getUserIdFromToken(auth?: string): string | null {\n  try {\n    if (!auth?.startsWith('Bearer ')) return null;\n    const jwt = auth.slice(7);\n    const payload = JSON.parse(Buffer.from(jwt.split('.')[1], 'base64').toString());\n    const id = payload.sub || payload.uid || payload.user_id || payload.userId || payload.id;\n    return /^[0-9a-f-]{36}$/i.test(id) ? id : null;\n  } catch {\n    return null;\n  }\n}\n\nexport const handler: Handler = async (event) => {\n  // NO-DB mode: never touch the database; return a fake id so UI can proceed\n  if (process.env.NO_DB_MODE === 'true') {\n    const fakeId = 'cld-' + ((globalThis as any).crypto?.randomUUID?.() ?? Date.now().toString(36));\n    return { statusCode: 200, body: JSON.stringify({ ok: true, data: { id: fakeId } }) };\n  }\n\n  try {\n    const input = JSON.parse(event.body || '{}') as Partial<CreateAssetInput>;\n\n    // Resolve authenticated user\n    const userId = getUserIdFromToken(event.headers.authorization);\n    if (!userId) return resp({ ok: false, error: 'Unauthorized' });\n\n    const mediaType = (input.mediaType === 'video' || input.mediaType === 'image') ? input.mediaType : 'image';\n\n    const { data, error } = await supabaseAdmin\n      .from('assets')\n      .insert({\n        user_id: userId,\n        cloudinary_public_id: input.sourcePublicId ?? null,\n        media_type: mediaType,\n        // compatibility with legacy schemas that still require resource_type\n        resource_type: mediaType,\n        preset_key: input.presetKey ?? null,\n        prompt: input.prompt ?? null,\n        source_asset_id: input.sourceAssetId ?? null,\n        status: 'queued',\n        is_public: false,\n        allow_remix: false,\n      })\n      .select('*')\n      .single();\n\n    if (error) return resp({ ok: false, error: error.message });\n\n    return resp({ ok: true, data: data as Asset });\n  } catch (e: any) {\n    return resp({ ok: false, error: e.message || 'create-asset error' });\n  }\n};\n\nfunction resp(body: ApiResult<any>) {\n  return { statusCode: body.ok ? 200 : 400, body: JSON.stringify(body) };\n}\n", "import { createClient } from '@supabase/supabase-js';\n\nexport const supabaseAdmin = createClient(\n  process.env.SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!,\n  { auth: { persistSession: false } }\n);\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,yBAA6B;AAEtB,IAAM,oBAAgB;AAAA,EAC3B,QAAQ,IAAI;AAAA,EACZ,QAAQ,IAAI;AAAA,EACZ,EAAE,MAAM,EAAE,gBAAgB,MAAM,EAAE;AACpC;;;ADFA,SAAS,mBAAmB,MAA8B;AACxD,MAAI;AACF,QAAI,CAAC,MAAM,WAAW,SAAS,EAAG,QAAO;AACzC,UAAM,MAAM,KAAK,MAAM,CAAC;AACxB,UAAM,UAAU,KAAK,MAAM,OAAO,KAAK,IAAI,MAAM,GAAG,EAAE,CAAC,GAAG,QAAQ,EAAE,SAAS,CAAC;AAC9E,UAAM,KAAK,QAAQ,OAAO,QAAQ,OAAO,QAAQ,WAAW,QAAQ,UAAU,QAAQ;AACtF,WAAO,mBAAmB,KAAK,EAAE,IAAI,KAAK;AAAA,EAC5C,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AAEO,IAAM,UAAmB,OAAO,UAAU;AAE/C,MAAI,QAAQ,IAAI,eAAe,QAAQ;AACrC,UAAM,SAAS,UAAW,WAAmB,QAAQ,aAAa,KAAK,KAAK,IAAI,EAAE,SAAS,EAAE;AAC7F,WAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,IAAI,MAAM,MAAM,EAAE,IAAI,OAAO,EAAE,CAAC,EAAE;AAAA,EACrF;AAEA,MAAI;AACF,UAAM,QAAQ,KAAK,MAAM,MAAM,QAAQ,IAAI;AAG3C,UAAM,SAAS,mBAAmB,MAAM,QAAQ,aAAa;AAC7D,QAAI,CAAC,OAAQ,QAAO,KAAK,EAAE,IAAI,OAAO,OAAO,eAAe,CAAC;AAE7D,UAAM,YAAa,MAAM,cAAc,WAAW,MAAM,cAAc,UAAW,MAAM,YAAY;AAEnG,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,cAC3B,KAAK,QAAQ,EACb,OAAO;AAAA,MACN,SAAS;AAAA,MACT,sBAAsB,MAAM,kBAAkB;AAAA,MAC9C,YAAY;AAAA;AAAA,MAEZ,eAAe;AAAA,MACf,YAAY,MAAM,aAAa;AAAA,MAC/B,QAAQ,MAAM,UAAU;AAAA,MACxB,iBAAiB,MAAM,iBAAiB;AAAA,MACxC,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,aAAa;AAAA,IACf,CAAC,EACA,OAAO,GAAG,EACV,OAAO;AAEV,QAAI,MAAO,QAAO,KAAK,EAAE,IAAI,OAAO,OAAO,MAAM,QAAQ,CAAC;AAE1D,WAAO,KAAK,EAAE,IAAI,MAAM,KAAoB,CAAC;AAAA,EAC/C,SAAS,GAAQ;AACf,WAAO,KAAK,EAAE,IAAI,OAAO,OAAO,EAAE,WAAW,qBAAqB,CAAC;AAAA,EACrE;AACF;AAEA,SAAS,KAAK,MAAsB;AAClC,SAAO,EAAE,YAAY,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,UAAU,IAAI,EAAE;AACvE;",
  "names": []
}

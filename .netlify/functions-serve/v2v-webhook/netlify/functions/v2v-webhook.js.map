{
  "version": 3,
  "sources": ["../../../../../../Users/sennie/Desktop/Stefna-main/netlify/functions/v2v-webhook.ts"],
  "sourceRoot": "/var/folders/3j/nmp5dkpd4tv8j0yq8f2ln8780000gn/T/tmp-42344-tdPRy0y2oEtv",
  "sourcesContent": ["import type { Handler } from '@netlify/functions'\nimport { createClient } from '@supabase/supabase-js'\n\nconst supabase = createClient(process.env.SUPABASE_URL!, process.env.SUPABASE_SERVICE_ROLE_KEY!)\nconst SHARED_SECRET = process.env.V2V_WEBHOOK_SECRET || ''\n\nexport const handler: Handler = async (event) => {\n  try {\n    if (event.httpMethod !== 'POST') return { statusCode: 405, body: 'Method Not Allowed' }\n\n    // optional signature/secret check\n    const secret = event.headers['x-webhook-secret'] || event.headers['x-signature']\n    if (SHARED_SECRET && secret !== SHARED_SECRET) return { statusCode: 401, body: 'unauthorized' }\n\n    const body = JSON.parse(event.body || '{}')\n    const { jobId, state, outputUrl, error, progress } = body\n    if (!jobId) return { statusCode: 400, body: 'jobId required' }\n\n    const update: any = { updated_at: new Date().toISOString() }\n    if (typeof progress === 'number') update.progress = Math.max(0, Math.min(100, progress))\n\n    if (state === 'completed') {\n      update.status = 'completed'\n      update.output_url = outputUrl\n      update.progress = 100\n    } else if (state === 'failed') {\n      update.status = 'failed'\n      update.error = error || 'unknown error'\n    } else if (state === 'processing' || state === 'queued') {\n      update.status = 'processing'\n    }\n\n    const { error: uerr } = await supabase.from('ai_generations').update(update).eq('id', jobId)\n    if (uerr) return { statusCode: 400, body: JSON.stringify({ error: uerr.message }) }\n    return { statusCode: 200, body: 'ok' }\n  } catch (e: any) {\n    console.error('v2v-webhook error', e)\n    return { statusCode: 400, body: 'bad payload' }\n  }\n}\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,yBAA6B;AAE7B,IAAM,eAAW,iCAAa,QAAQ,IAAI,cAAe,QAAQ,IAAI,yBAA0B;AAC/F,IAAM,gBAAgB,QAAQ,IAAI,sBAAsB;AAEjD,IAAM,UAAmB,OAAO,UAAU;AAC/C,MAAI;AACF,QAAI,MAAM,eAAe,OAAQ,QAAO,EAAE,YAAY,KAAK,MAAM,qBAAqB;AAGtF,UAAM,SAAS,MAAM,QAAQ,kBAAkB,KAAK,MAAM,QAAQ,aAAa;AAC/E,QAAI,iBAAiB,WAAW,cAAe,QAAO,EAAE,YAAY,KAAK,MAAM,eAAe;AAE9F,UAAM,OAAO,KAAK,MAAM,MAAM,QAAQ,IAAI;AAC1C,UAAM,EAAE,OAAO,OAAO,WAAW,OAAO,SAAS,IAAI;AACrD,QAAI,CAAC,MAAO,QAAO,EAAE,YAAY,KAAK,MAAM,iBAAiB;AAE7D,UAAM,SAAc,EAAE,aAAY,oBAAI,KAAK,GAAE,YAAY,EAAE;AAC3D,QAAI,OAAO,aAAa,SAAU,QAAO,WAAW,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,QAAQ,CAAC;AAEvF,QAAI,UAAU,aAAa;AACzB,aAAO,SAAS;AAChB,aAAO,aAAa;AACpB,aAAO,WAAW;AAAA,IACpB,WAAW,UAAU,UAAU;AAC7B,aAAO,SAAS;AAChB,aAAO,QAAQ,SAAS;AAAA,IAC1B,WAAW,UAAU,gBAAgB,UAAU,UAAU;AACvD,aAAO,SAAS;AAAA,IAClB;AAEA,UAAM,EAAE,OAAO,KAAK,IAAI,MAAM,SAAS,KAAK,gBAAgB,EAAE,OAAO,MAAM,EAAE,GAAG,MAAM,KAAK;AAC3F,QAAI,KAAM,QAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,KAAK,QAAQ,CAAC,EAAE;AAClF,WAAO,EAAE,YAAY,KAAK,MAAM,KAAK;AAAA,EACvC,SAAS,GAAQ;AACf,YAAQ,MAAM,qBAAqB,CAAC;AACpC,WAAO,EAAE,YAAY,KAAK,MAAM,cAAc;AAAA,EAChD;AACF;",
  "names": []
}

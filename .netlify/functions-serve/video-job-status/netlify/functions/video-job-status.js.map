{
  "version": 3,
  "sources": ["../../../../../../Users/sennie/Desktop/Stefna-main/netlify/functions/video-job-status.ts"],
  "sourceRoot": "/var/folders/3j/nmp5dkpd4tv8j0yq8f2ln8780000gn/T/tmp-42344-VFi04irBEW2L",
  "sourcesContent": ["// /.netlify/functions/video-job-status.ts\nimport type { Handler } from '@netlify/functions';\nimport { createClient } from '@supabase/supabase-js';\n\nconst SUPABASE_URL = process.env.SUPABASE_URL!;\nconst SUPABASE_ANON_KEY = process.env.SUPABASE_ANON_KEY!;\n\nexport const handler: Handler = async (event) => {\n  if (event.httpMethod !== 'GET') return { statusCode: 405, body: 'Method not allowed' };\n\n  const job_id = (event.queryStringParameters || {}).job_id;\n  if (!job_id) return { statusCode: 400, body: 'job_id required' };\n\n  const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {\n    global: { headers: { Authorization: event.headers.authorization || '' } }\n  });\n\n  const { data, error } = await supabase\n    .from('video_jobs')\n    .select('id,status,result_url,error,provider_job_id,updated_at')\n    .eq('id', job_id)\n    .single();\n\n  if (error) return { statusCode: 404, body: JSON.stringify({ error: error.message }) };\n  return { statusCode: 200, body: JSON.stringify(data) };\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,yBAA6B;AAE7B,IAAM,eAAe,QAAQ,IAAI;AACjC,IAAM,oBAAoB,QAAQ,IAAI;AAE/B,IAAM,UAAmB,OAAO,UAAU;AAC/C,MAAI,MAAM,eAAe,MAAO,QAAO,EAAE,YAAY,KAAK,MAAM,qBAAqB;AAErF,QAAM,UAAU,MAAM,yBAAyB,CAAC,GAAG;AACnD,MAAI,CAAC,OAAQ,QAAO,EAAE,YAAY,KAAK,MAAM,kBAAkB;AAE/D,QAAM,eAAW,iCAAa,cAAc,mBAAmB;AAAA,IAC7D,QAAQ,EAAE,SAAS,EAAE,eAAe,MAAM,QAAQ,iBAAiB,GAAG,EAAE;AAAA,EAC1E,CAAC;AAED,QAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,YAAY,EACjB,OAAO,uDAAuD,EAC9D,GAAG,MAAM,MAAM,EACf,OAAO;AAEV,MAAI,MAAO,QAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,MAAM,QAAQ,CAAC,EAAE;AACpF,SAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,IAAI,EAAE;AACvD;",
  "names": []
}

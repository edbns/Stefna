{
  "version": 3,
  "sources": ["../../../../../../Users/sennie/Desktop/Stefna-main/netlify/functions/debug-feed.js"],
  "sourceRoot": "/var/folders/3j/nmp5dkpd4tv8j0yq8f2ln8780000gn/T/tmp-42344-edFpdq6CjqB6",
  "sourcesContent": ["const { createClient } = require('@supabase/supabase-js')\n\nexports.handler = async (event) => {\n  try {\n    if (event.httpMethod !== 'GET') {\n      return { statusCode: 405, body: 'Method Not Allowed' }\n    }\n\n    const supabase = createClient(\n      process.env.SUPABASE_URL,\n      process.env.SUPABASE_SERVICE_ROLE_KEY\n    )\n\n    console.log('\uD83D\uDD0D Debug: Checking media_assets table...')\n\n    // Check total count\n    const { count: totalCount, error: countError } = await supabase\n      .from('media_assets')\n      .select('*', { count: 'exact', head: true })\n\n    if (countError) {\n      console.error('\u274C Count error:', countError)\n      return { statusCode: 500, body: JSON.stringify({ error: countError.message }) }\n    }\n\n    // Check by visibility\n    const { data: publicMedia, error: publicError } = await supabase\n      .from('media_assets')\n      .select('id,visibility,env,created_at,user_id')\n      .eq('visibility', 'public')\n      .limit(10)\n\n    if (publicError) {\n      console.error('\u274C Public media error:', publicError)\n      return { statusCode: 500, body: JSON.stringify({ error: publicError.message }) }\n    }\n\n    // Check by environment\n    const { data: prodMedia, error: prodError } = await supabase\n      .from('media_assets')\n      .select('id,visibility,env,created_at,user_id')\n      .eq('env', 'prod')\n      .limit(10)\n\n    if (prodError) {\n      console.error('\u274C Prod media error:', prodError)\n      return { statusCode: 500, body: JSON.stringify({ error: prodError.message }) }\n    }\n\n    // Check your specific media (if you provide user_id)\n    const { data: userMedia, error: userError } = await supabase\n      .from('media_assets')\n      .select('id,visibility,env,created_at,user_id,prompt')\n      .order('created_at', { ascending: false })\n      .limit(20)\n\n    if (userError) {\n      console.error('\u274C User media error:', userError)\n      return { statusCode: 500, body: JSON.stringify({ error: userError.message }) }\n    }\n\n    const debugInfo = {\n      totalCount,\n      publicCount: publicMedia?.length || 0,\n      prodCount: prodMedia?.length || 0,\n      publicMedia: publicMedia?.slice(0, 5) || [],\n      prodMedia: prodMedia?.slice(0, 5) || [],\n      recentMedia: userMedia?.slice(0, 10) || [],\n      environment: {\n        PUBLIC_APP_ENV: process.env.PUBLIC_APP_ENV,\n        NODE_ENV: process.env.NODE_ENV\n      }\n    }\n\n    console.log('\uD83D\uDD0D Debug info:', debugInfo)\n\n    return {\n      statusCode: 200,\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify(debugInfo)\n    }\n\n  } catch (e) {\n    console.error('\u274C Debug function error:', e)\n    return { \n      statusCode: 500, \n      body: JSON.stringify({ error: e?.message || 'Debug function crashed' }) \n    }\n  }\n}\n\n"],
  "mappings": ";;;AAAA,IAAM,EAAE,aAAa,IAAI,QAAQ,uBAAuB;AAExD,QAAQ,UAAU,OAAO,UAAU;AACjC,MAAI;AACF,QAAI,MAAM,eAAe,OAAO;AAC9B,aAAO,EAAE,YAAY,KAAK,MAAM,qBAAqB;AAAA,IACvD;AAEA,UAAM,WAAW;AAAA,MACf,QAAQ,IAAI;AAAA,MACZ,QAAQ,IAAI;AAAA,IACd;AAEA,YAAQ,IAAI,iDAA0C;AAGtD,UAAM,EAAE,OAAO,YAAY,OAAO,WAAW,IAAI,MAAM,SACpD,KAAK,cAAc,EACnB,OAAO,KAAK,EAAE,OAAO,SAAS,MAAM,KAAK,CAAC;AAE7C,QAAI,YAAY;AACd,cAAQ,MAAM,uBAAkB,UAAU;AAC1C,aAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,WAAW,QAAQ,CAAC,EAAE;AAAA,IAChF;AAGA,UAAM,EAAE,MAAM,aAAa,OAAO,YAAY,IAAI,MAAM,SACrD,KAAK,cAAc,EACnB,OAAO,sCAAsC,EAC7C,GAAG,cAAc,QAAQ,EACzB,MAAM,EAAE;AAEX,QAAI,aAAa;AACf,cAAQ,MAAM,8BAAyB,WAAW;AAClD,aAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,YAAY,QAAQ,CAAC,EAAE;AAAA,IACjF;AAGA,UAAM,EAAE,MAAM,WAAW,OAAO,UAAU,IAAI,MAAM,SACjD,KAAK,cAAc,EACnB,OAAO,sCAAsC,EAC7C,GAAG,OAAO,MAAM,EAChB,MAAM,EAAE;AAEX,QAAI,WAAW;AACb,cAAQ,MAAM,4BAAuB,SAAS;AAC9C,aAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,UAAU,QAAQ,CAAC,EAAE;AAAA,IAC/E;AAGA,UAAM,EAAE,MAAM,WAAW,OAAO,UAAU,IAAI,MAAM,SACjD,KAAK,cAAc,EACnB,OAAO,6CAA6C,EACpD,MAAM,cAAc,EAAE,WAAW,MAAM,CAAC,EACxC,MAAM,EAAE;AAEX,QAAI,WAAW;AACb,cAAQ,MAAM,4BAAuB,SAAS;AAC9C,aAAO,EAAE,YAAY,KAAK,MAAM,KAAK,UAAU,EAAE,OAAO,UAAU,QAAQ,CAAC,EAAE;AAAA,IAC/E;AAEA,UAAM,YAAY;AAAA,MAChB;AAAA,MACA,aAAa,aAAa,UAAU;AAAA,MACpC,WAAW,WAAW,UAAU;AAAA,MAChC,aAAa,aAAa,MAAM,GAAG,CAAC,KAAK,CAAC;AAAA,MAC1C,WAAW,WAAW,MAAM,GAAG,CAAC,KAAK,CAAC;AAAA,MACtC,aAAa,WAAW,MAAM,GAAG,EAAE,KAAK,CAAC;AAAA,MACzC,aAAa;AAAA,QACX,gBAAgB,QAAQ,IAAI;AAAA,QAC5B,UAAU,QAAQ,IAAI;AAAA,MACxB;AAAA,IACF;AAEA,YAAQ,IAAI,yBAAkB,SAAS;AAEvC,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAC9C,MAAM,KAAK,UAAU,SAAS;AAAA,IAChC;AAAA,EAEF,SAAS,GAAG;AACV,YAAQ,MAAM,gCAA2B,CAAC;AAC1C,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,OAAO,GAAG,WAAW,yBAAyB,CAAC;AAAA,IACxE;AAAA,EACF;AACF;",
  "names": []
}

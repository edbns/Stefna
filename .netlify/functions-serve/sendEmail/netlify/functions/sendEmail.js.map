{
  "version": 3,
  "sources": ["../../../../../../Users/sennie/Desktop/Stefna-main/netlify/functions/sendEmail.js"],
  "sourceRoot": "/var/folders/3j/nmp5dkpd4tv8j0yq8f2ln8780000gn/T/tmp-42344-uvv9MFkNhC2q",
  "sourcesContent": ["exports.handler = async (event, context) => {\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'Access-Control-Allow-Methods': 'POST, OPTIONS'\n  };\n\n  if (event.httpMethod === 'OPTIONS') {\n    return { statusCode: 200, headers, body: '' };\n  }\n\n  if (event.httpMethod !== 'POST') {\n    return {\n      statusCode: 405,\n      headers,\n      body: JSON.stringify({ error: 'Method not allowed' })\n    };\n  }\n\n  try {\n    console.log('\uD83D\uDCE7 Netlify function called with event:', JSON.stringify(event.body))\n    const { to, subject, html, from = 'Stefna <hello@stefna.xyz>' } = JSON.parse(event.body);\n\n    if (!to || !subject || !html) {\n      return {\n        statusCode: 400,\n        headers,\n        body: JSON.stringify({ error: 'Missing required fields' })\n      };\n    }\n\n    const apiKey = process.env.RESEND_API_KEY;\n    console.log('\uD83D\uDCE7 RESEND_API_KEY present:', !!apiKey)\n    if (!apiKey) {\n      console.log('\uD83D\uDCE7 ERROR: RESEND_API_KEY not configured')\n      return {\n        statusCode: 500,\n        headers,\n        body: JSON.stringify({ error: 'API key not configured' })\n      };\n    }\n\n    console.log('\uD83D\uDCE7 Calling Resend API with:', { from, to, subject })\n    const response = await fetch('https://api.resend.com/emails', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ from, to, subject, html })\n    });\n\n    console.log('\uD83D\uDCE7 Resend API response status:', response.status)\n    if (!response.ok) {\n      const errorText = await response.text()\n      console.log('\uD83D\uDCE7 Resend API error:', errorText)\n      return {\n        statusCode: 500,\n        headers,\n        body: JSON.stringify({ error: 'Failed to send email', details: errorText })\n      };\n    }\n\n    const result = await response.json()\n    console.log('\uD83D\uDCE7 Email sent successfully:', result)\n    return {\n      statusCode: 200,\n      headers,\n      body: JSON.stringify({ success: true, message: 'Email sent', result })\n    };\n\n  } catch (error) {\n    return {\n      statusCode: 500,\n      headers,\n      body: JSON.stringify({ error: 'Internal server error' })\n    };\n  }\n}; "],
  "mappings": ";;;AAAA,QAAQ,UAAU,OAAO,OAAO,YAAY;AAC1C,QAAM,UAAU;AAAA,IACd,+BAA+B;AAAA,IAC/B,gCAAgC;AAAA,IAChC,gCAAgC;AAAA,EAClC;AAEA,MAAI,MAAM,eAAe,WAAW;AAClC,WAAO,EAAE,YAAY,KAAK,SAAS,MAAM,GAAG;AAAA,EAC9C;AAEA,MAAI,MAAM,eAAe,QAAQ;AAC/B,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC;AAAA,IACtD;AAAA,EACF;AAEA,MAAI;AACF,YAAQ,IAAI,iDAA0C,KAAK,UAAU,MAAM,IAAI,CAAC;AAChF,UAAM,EAAE,IAAI,SAAS,MAAM,OAAO,4BAA4B,IAAI,KAAK,MAAM,MAAM,IAAI;AAEvF,QAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM;AAC5B,aAAO;AAAA,QACL,YAAY;AAAA,QACZ;AAAA,QACA,MAAM,KAAK,UAAU,EAAE,OAAO,0BAA0B,CAAC;AAAA,MAC3D;AAAA,IACF;AAEA,UAAM,SAAS,QAAQ,IAAI;AAC3B,YAAQ,IAAI,qCAA8B,CAAC,CAAC,MAAM;AAClD,QAAI,CAAC,QAAQ;AACX,cAAQ,IAAI,gDAAyC;AACrD,aAAO;AAAA,QACL,YAAY;AAAA,QACZ;AAAA,QACA,MAAM,KAAK,UAAU,EAAE,OAAO,yBAAyB,CAAC;AAAA,MAC1D;AAAA,IACF;AAEA,YAAQ,IAAI,sCAA+B,EAAE,MAAM,IAAI,QAAQ,CAAC;AAChE,UAAM,WAAW,MAAM,MAAM,iCAAiC;AAAA,MAC5D,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,iBAAiB,UAAU,MAAM;AAAA,QACjC,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU,EAAE,MAAM,IAAI,SAAS,KAAK,CAAC;AAAA,IAClD,CAAC;AAED,YAAQ,IAAI,yCAAkC,SAAS,MAAM;AAC7D,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,IAAI,+BAAwB,SAAS;AAC7C,aAAO;AAAA,QACL,YAAY;AAAA,QACZ;AAAA,QACA,MAAM,KAAK,UAAU,EAAE,OAAO,wBAAwB,SAAS,UAAU,CAAC;AAAA,MAC5E;AAAA,IACF;AAEA,UAAM,SAAS,MAAM,SAAS,KAAK;AACnC,YAAQ,IAAI,sCAA+B,MAAM;AACjD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU,EAAE,SAAS,MAAM,SAAS,cAAc,OAAO,CAAC;AAAA,IACvE;AAAA,EAEF,SAAS,OAAO;AACd,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU,EAAE,OAAO,wBAAwB,CAAC;AAAA,IACzD;AAAA,EACF;AACF;",
  "names": []
}

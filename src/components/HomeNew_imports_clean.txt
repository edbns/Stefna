import React, { useEffect, useMemo, useRef, useState } from 'react'
import { useNavigate, useLocation } from 'react-router-dom'
import { Plus, X, FileText, ArrowUp } from 'lucide-react'
import { authenticatedFetch } from '../utils/apiClient'
import authService from '../services/authService'
import MasonryMediaGrid from './MasonryMediaGrid'
import SkeletonGrid from './SkeletonGrid'
import type { UserMedia } from '../services/userMediaService'
import { useToasts } from './ui/Toasts'
import ProfileIcon from './ProfileIcon'
import { useProfile } from '../contexts/ProfileContext'
import SimpleGenerationService, { GenerationMode } from '../services/simpleGenerationService'
import { useSelectedPreset } from '../stores/selectedPreset'
import { HiddenUploader } from './HiddenUploader'
import { uploadSourceToCloudinary } from '../services/uploadSource'
import { useGenerationMode } from '../stores/generationMode'
import { EmotionMaskPicker } from './EmotionMaskPicker'
import { GhibliReactionPicker } from './GhibliReactionPicker'
import { NeoTokyoGlitchPicker } from './NeoTokyoGlitchPicker'
import { MediaUploadAgreement } from './MediaUploadAgreement'
import { EMOTION_MASK_PRESETS } from '../presets/emotionmask'
import { GHIBLI_REACTION_PRESETS } from '../presets/ghibliReact'
import { NEO_TOKYO_GLITCH_PRESETS } from '../presets/neoTokyoGlitch'
import FullScreenMediaViewer from './FullScreenMediaViewer'
import userMediaService from '../services/userMediaService'

const generateRunId = () => `run_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`

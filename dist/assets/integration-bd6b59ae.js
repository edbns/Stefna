import{i,o as c,a as l,b as m,O as s,g as r}from"./index-c4bbcbac.js";async function u(e,o,n){if(console.log("🕰️ Time machine click:",e),i("time_machine",e)){console.log("✅ Using new preset system for:",e),await c("time_machine",e);return}console.warn("⚠️ Option not configured in new system, falling back:",e),window.dispatchEvent(new CustomEvent("generation-error",{detail:{message:`${e} is not configured yet`,timestamp:Date.now()}}))}async function f(e){if(console.log("🔧 Restore click:",e),i("restore",e)){console.log("✅ Using new preset system for:",e),await c("restore",e);return}console.warn("⚠️ Restore option not configured:",e),window.dispatchEvent(new CustomEvent("generation-error",{detail:{message:`${e} restore is not configured yet`,timestamp:Date.now()}}))}async function h(e){if(console.log("📖 Story click:",e),r().some(t=>t.key===e)){console.log("✅ Using new preset system for story:",e),await l(e);return}console.warn("⚠️ Story option not configured:",e),window.dispatchEvent(new CustomEvent("generation-error",{detail:{message:`${e} story mode is not configured yet`,timestamp:Date.now()}}))}async function w(e,o,n){console.log("🎨 Preset click (integrated):",e),await m(e)}function g(){const e=Object.keys(s.time_machine||{}),o=Object.keys(s.restore||{}),t=r().map(a=>a.key);return{time_machine:e,restore:o,story:t,total:e.length+o.length+t.length}}function d(){console.group("🔍 Preset System Debug"),console.log("Available options:",g()),console.log("Time machine options:",Object.keys(s.time_machine||{})),console.log("Restore options:",Object.keys(s.restore||{})),console.log("Story themes:",r().map(e=>e.key)),console.groupEnd()}export{d as debugPresetSystem,g as getAvailableOptions,w as onPresetClickIntegrated,f as onRestoreClick,h as onStoryClick,u as onTimeMachineClick};

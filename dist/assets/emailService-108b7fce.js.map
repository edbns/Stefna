{"version":3,"file":"emailService-108b7fce.js","sources":["../../src/services/emailService.ts"],"sourcesContent":["// Email Service for Netlify Edge Functions\n// Handles OTP email sending via Resend\n\ninterface EmailResponse {\n  success: boolean\n  error?: string\n  data?: any\n}\n\ninterface ReferralEmailData {\n  referrerEmail: string\n  referrerName?: string\n  friendEmail: string\n  referralCode?: string\n}\n\nclass EmailService {\n  private baseUrl: string\n\n  constructor() {\n    // Use Netlify Edge Function URL\n    this.baseUrl = import.meta.env.DEV \n      ? 'http://localhost:8888/.netlify/edge-functions/send-otp-email'\n      : '/api/send-otp-email'\n  }\n\n  // Send OTP email via Netlify Edge Function\n  async sendOTPEmail(email: string, otp: string): Promise<EmailResponse> {\n    try {\n      const response = await fetch(this.baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          otp\n        })\n      })\n\n      const data = await response.json()\n\n      if (!response.ok) {\n        console.error('Email service error:', data)\n        return {\n          success: false,\n          error: data.error || 'Failed to send email'\n        }\n      }\n\n      return {\n        success: true,\n        data\n      }\n    } catch (error) {\n      console.error('Email service error:', error)\n      return {\n        success: false,\n        error: 'Network error while sending email'\n      }\n    }\n  }\n\n  // Send referral email via Netlify Function\n  async sendReferralEmail(referralData: ReferralEmailData): Promise<EmailResponse> {\n    try {\n      const response = await fetch('/.netlify/functions/sendEmail', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          to: referralData.friendEmail,\n          subject: `${referralData.referrerName || 'A friend'} invited you to Stefna! ðŸŽ¨`,\n          html: this.generateReferralEmailHTML(referralData)\n        })\n      })\n\n      const data = await response.json()\n\n      if (!response.ok) {\n        console.error('Referral email service error:', data)\n        return {\n          success: false,\n          error: data.error || 'Failed to send referral email'\n        }\n      }\n\n      return {\n        success: true,\n        data\n      }\n    } catch (error) {\n      console.error('Referral email service error:', error)\n      return {\n        success: false,\n        error: 'Network error while sending referral email'\n      }\n    }\n  }\n\n  // Generate referral email HTML\n  private generateReferralEmailHTML(data: ReferralEmailData): string {\n    const referrerName = data.referrerName || 'A friend'\n    const signupUrl = data.referralCode \n      ? `https://stefna.xyz/auth?ref=${data.referralCode}`\n      : 'https://stefna.xyz/auth'\n\n    return `\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background-color: #000000; color: #ffffff;\">\n        <div style=\"text-align: center; padding: 40px 20px;\">\n          <!-- Logo -->\n          <img src=\"https://stefna.xyz/logo.png\" alt=\"Stefna\" style=\"width: 80px; height: 80px; margin-bottom: 30px;\">\n          \n          <!-- Main content -->\n          <div style=\"background-color: #1a1a1a; padding: 30px; border-radius: 10px; margin-bottom: 30px;\">\n            <h1 style=\"color: #ffffff; font-size: 24px; margin-bottom: 10px;\">You've been invited!</h1>\n            <p style=\"color: #cccccc; font-size: 16px; margin-bottom: 30px;\">Join Stefna and start creating with AI</p>\n            \n            <p style=\"color: #cccccc; font-size: 14px; line-height: 1.5; margin-bottom: 20px;\">\n              <strong>${referrerName}</strong> thinks you'd love Stefna - the AI-powered creative platform where you can transform photos and videos with just a prompt.\n            </p>\n            \n            <p style=\"color: #cccccc; font-size: 14px; line-height: 1.5; margin-bottom: 30px;\">\n              Create stunning AI art, remix existing content, and explore endless creative possibilities.\n            </p>\n            \n            <div style=\"background-color: #1a1a1a; padding: 20px; border-radius: 10px; margin: 30px 0; border: 1px solid #333333;\">\n              <p style=\"color: #888888; font-size: 12px; text-transform: uppercase; margin-bottom: 10px;\">Special Bonus</p>\n              <p style=\"color: #ffffff; font-size: 14px; margin: 0;\">\n                Sign up with this invite and get <strong>10 bonus tokens</strong> to start creating immediately!\n              </p>\n            </div>\n            \n            <a href=\"${signupUrl}\" \n               style=\"display: inline-block; background-color: #ffffff; color: #000000; text-decoration: none; padding: 15px 30px; border-radius: 10px; font-weight: bold; font-size: 16px; margin: 20px 0;\">\n              Join Stefna Now\n            </a>\n            \n            <p style=\"color: #888888; font-size: 14px; margin-top: 20px;\">\n              No credit card required â€¢ Start creating in seconds\n            </p>\n          </div>\n          \n          <!-- Features -->\n          <div style=\"background-color: #1a1a1a; padding: 30px; border-radius: 15px; margin-bottom: 30px;\">\n            <h2 style=\"color: #ffffff; font-size: 20px; margin-bottom: 20px;\">What you can do with Stefna:</h2>\n            <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 20px; text-align: left;\">\n              <div>\n                <h3 style=\"color: #ffffff; font-size: 16px; margin-bottom: 8px;\">AI Art Generation</h3>\n                <p style=\"color: #cccccc; font-size: 14px;\">Create stunning images from text prompts</p>\n              </div>\n              <div>\n                <h3 style=\"color: #ffffff; font-size: 16px; margin-bottom: 8px;\">Video Transformation</h3>\n                <p style=\"color: #cccccc; font-size: 14px;\">Transform videos with AI-powered effects</p>\n              </div>\n              <div>\n                <h3 style=\"color: #ffffff; font-size: 16px; margin-bottom: 8px;\">Content Remixing</h3>\n                <p style=\"color: #cccccc; font-size: 14px;\">Remix and enhance existing media</p>\n              </div>\n              <div>\n                <h3 style=\"color: #ffffff; font-size: 16px; margin-bottom: 8px;\">Instant Results</h3>\n                <p style=\"color: #cccccc; font-size: 14px;\">Get results in seconds, not hours</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Footer -->\n        <div style=\"border-top: 1px solid #333333; padding: 30px 20px; text-align: center;\">\n          <p style=\"color: #ffffff; font-size: 14px; margin-bottom: 5px;\">Stefna - Turn Moments into Masterpiecesâ€”No Limits</p>\n          <p style=\"color: #888888; font-size: 12px; margin-bottom: 5px;\">This email was sent to ${data.friendEmail}</p>\n          <p style=\"color: #888888; font-size: 12px;\">If you have any questions, contact us at hello@stefna.xyz</p>\n        </div>\n      </div>\n    `\n  }\n\n  // Generate a random 6-digit OTP\n  generateOTP(): string {\n    return Math.floor(100000 + Math.random() * 900000).toString()\n  }\n\n  // Send OTP with auto-generated code\n  async sendOTP(email: string): Promise<EmailResponse> {\n    const otp = this.generateOTP()\n    return this.sendOTPEmail(email, otp)\n  }\n}\n\nexport default new EmailService() "],"names":["emailService","EmailService","constructor","__publicField","this","baseUrl","sendOTPEmail","email","otp","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","console","error","sendReferralEmail","referralData","to","friendEmail","subject","referrerName","html","generateReferralEmailHTML","referralCode","generateOTP","Math","floor","random","toString","sendOTP"],"mappings":"4KA8LA,MAAeA,EAAA,IA9Kf,MAAMC,aAGJ,WAAAC,GAFQC,cAAAC,KAAA,WAINA,KAAKC,QAED,qBACN,CAGA,kBAAMC,CAAaC,EAAeC,GAC5B,IACF,MAAMC,QAAiBC,MAAMN,KAAKC,QAAS,CACzCM,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBR,QACAC,UAIEQ,QAAaP,EAASQ,OAExB,OAACR,EAASS,GAQP,CACLC,SAAS,EACTH,SATQI,QAAAC,MAAM,uBAAwBL,GAC/B,CACLG,SAAS,EACTE,MAAOL,EAAKK,OAAS,+BAQlBA,GAEA,OADCD,QAAAC,MAAM,uBAAwBA,GAC/B,CACLF,SAAS,EACTE,MAAO,oCAEX,CACF,CAGA,uBAAMC,CAAkBC,GAClB,IACI,MAAAd,QAAiBC,MAAM,gCAAiC,CAC5DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBS,GAAID,EAAaE,YACjBC,QAAS,GAAGH,EAAaI,cAAgB,uCACzCC,KAAMxB,KAAKyB,0BAA0BN,OAInCP,QAAaP,EAASQ,OAExB,OAACR,EAASS,GAQP,CACLC,SAAS,EACTH,SATQI,QAAAC,MAAM,gCAAiCL,GACxC,CACLG,SAAS,EACTE,MAAOL,EAAKK,OAAS,wCAQlBA,GAEA,OADCD,QAAAC,MAAM,gCAAiCA,GACxC,CACLF,SAAS,EACTE,MAAO,6CAEX,CACF,CAGQ,yBAAAQ,CAA0Bb,GAMzB,MAAA,o2BALcA,EAAKW,cAAgB,o6BACxBX,EAAKc,aACnB,+BAA+Bd,EAAKc,eACpC,6tEAiE2Fd,EAAKS,0KAKtG,CAGA,WAAAM,GACS,OAAAC,KAAKC,MAAM,IAAyB,IAAhBD,KAAKE,UAAmBC,UACrD,CAGA,aAAMC,CAAQ7B,GACN,MAAAC,EAAMJ,KAAK2B,cACV,OAAA3B,KAAKE,aAAaC,EAAOC,EAClC"}
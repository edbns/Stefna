async function p(o){const n=(o==null?void 0:o.remoteUrl)||(o==null?void 0:o.url)||(o==null?void 0:o.blobUrl);if(n!=null&&n.startsWith("https://"))return n;if(o!=null&&o.file){const r=await(await fetch("/.netlify/functions/cloudinary-sign",{method:"POST"})).json();if(!(r!=null&&r.signature))throw new Error("Cloudinary sign failed");const i=new FormData;i.append("file",o.file),r.folder&&i.append("folder",r.folder),i.append("timestamp",String(r.timestamp)),i.append("api_key",r.apiKey),i.append("signature",r.signature);const l=await fetch(`https://api.cloudinary.com/v1_1/${r.cloudName}/auto/upload`,{method:"POST",body:i}),e=await l.json();if(!l.ok||!(e!=null&&e.secure_url))throw new Error("Upload failed");return e.secure_url}throw o!=null&&o.blobUrl?new Error("Cannot process blob URL without File/Blob object. Please pass the actual file."):new Error("No valid source found. Need either https URL, File/Blob object, or remote URL.")}export{p as ensureRemoteUrl};

import{r as l,O as r,i as c}from"./index-93f947a2.js";import{b as d}from"./payload-6b93731c.js";function g(){return null}async function m(e){return console.log("🚀 Calling AIML API with payload:",e),{success:!0,resultUrl:"mock-result-url"}}async function f(e){return console.log("💾 Saving media to DB and Cloudinary:",e),{id:"mock-record-id",url:e.resultUrl}}function y(e){console.log("🎉 Adding result to UI:",e),window.dispatchEvent(new CustomEvent("generation-complete",{detail:{record:e,resultUrl:e.url,timestamp:Date.now()}}))}function s(e,o){console.log(`${e==="success"?"✅":"❌"} Toast: ${o}`),window.dispatchEvent(new CustomEvent(`generation-${e}`,{detail:{message:o,timestamp:Date.now()}}))}async function u(e){try{console.log("🎯 Running preset:",e.label);const o=e.requiresSource?g():null;if(e.requiresSource&&!o){s("error","Pick a photo/video first, then apply a preset.");return}const n=d({preset:e,src:o});console.log("📦 Built payload:",n);const t=await m(n);if(!t.success)throw new Error("Generation failed");const i=await f(t);y(i),s("success",`${e.label} applied!`)}catch(o){console.error("❌ Preset execution failed:",o),s("error","Generation failed. Please try again.")}}async function w(e){try{const o=l(e);await u(o)}catch(o){console.error("❌ Preset click failed:",o),s("error",`Failed to apply ${e}. Please try again.`)}}async function a(e,o){var n;try{const t=(n=r[e])==null?void 0:n[o];if(!t){console.warn(`Option ${e}/${o} not configured`),s("error","Coming soon!");return}const i=l(t.use,t.overrides);console.log(`🔧 Resolved option ${e}/${o} to preset:`,i.label),await u(i)}catch(t){console.error(`❌ Option click failed for ${e}/${o}:`,t),s("error","Generation failed. Please try again.")}}async function v(e,o,n){if(console.log("🕰️ Time machine click:",e),c("time_machine",e)){console.log("✅ Using new preset system for:",e),await a("time_machine",e);return}console.warn("⚠️ Option not configured in new system, falling back:",e),window.dispatchEvent(new CustomEvent("generation-error",{detail:{message:`${e} is not configured yet`,timestamp:Date.now()}}))}async function b(e){if(console.log("🔧 Restore click:",e),c("restore",e)){console.log("✅ Using new preset system for:",e),await a("restore",e);return}console.warn("⚠️ Restore option not configured:",e),window.dispatchEvent(new CustomEvent("generation-error",{detail:{message:`${e} restore is not configured yet`,timestamp:Date.now()}}))}async function P(e){if(console.log("📖 Story click:",e),c("story",e)){console.log("✅ Using new preset system for:",e),await a("story",e);return}console.warn("⚠️ Story option not configured:",e),window.dispatchEvent(new CustomEvent("generation-error",{detail:{message:`${e} story mode is not configured yet`,timestamp:Date.now()}}))}async function C(e,o,n){console.log("🎨 Preset click (integrated):",e),await w(e)}function h(){const e=Object.keys(r.time_machine||{}),o=Object.keys(r.restore||{}),n=Object.keys(r.story||{});return{time_machine:e,restore:o,story:n,total:e.length+o.length+n.length}}function O(){console.group("🔍 Preset System Debug"),console.log("Available options:",h()),console.log("Time machine options:",Object.keys(r.time_machine||{})),console.log("Restore options:",Object.keys(r.restore||{})),console.log("Story options:",Object.keys(r.story||{})),console.groupEnd()}export{O as debugPresetSystem,h as getAvailableOptions,C as onPresetClickIntegrated,b as onRestoreClick,P as onStoryClick,v as onTimeMachineClick};

async function prepareSourceAsset(e){if("string"==typeof e&&/^https?:\/\//i.test(e)){return{url:e,resource_type:/\.(mp4|mov|webm)$/i.test(e)?"video":"image"}}let t;if("string"==typeof e&&e.startsWith("blob:")){const a=await fetch(e),p=await a.blob(),o=p.type.startsWith("image/")?p.type.split("/")[1]||"png":p.type.startsWith("video/")?p.type.split("/")[1]||"mp4":"bin";t=new File([p],`source.${o}`,{type:p.type||"application/octet-stream"})}else t=e;const a=await fetch("/.netlify/functions/cloudinary-sign",{method:"POST"}),{timestamp:p,signature:o,api_key:r,cloud_name:i,folder:s,upload_preset:n}=await a.json(),l=new FormData;l.append("file",t),l.append("timestamp",String(p)),l.append("signature",o),l.append("api_key",r),s&&l.append("folder",s),n&&l.append("upload_preset",n);const u=await fetch(`https://api.cloudinary.com/v1_1/${i}/auto/upload`,{method:"POST",body:l}),c=await u.json().catch(()=>({}));if(!u.ok)throw console.error("Cloudinary upload failed:",c),new Error("Cloudinary upload failed");const d=c.resource_type;return{url:c.secure_url,resource_type:d}}export{prepareSourceAsset};
//# sourceMappingURL=prepareSourceAsset-ec2ea4fc.js.map
